name: RVE_extrusion
#archive: dropbox
tasks:

  - name: load_microstructure
    method: EBSD
    software: DefDAP
    base:
      root_path: /mnt/iusers01/jf01/mbgm5pc3/EBSD_scans/year1_HRDIC
      scaling_factor: 1
      EBSD:
        #filename: MTEX_Cropped_AZtec_cleaned_AGS_Ti64
        filename: A3_before_0_5um_edited_reduced_area
        #flip_vert: true       # optional
        boundary_tol: 4       # optional
        min_grain_size: 5    # optional

        
        
  - name: generate_volume_element
    method: extrusion
    software: damask
    base:
      depth: 6
      image_axes: ['y', 'x']
      homog_label: SX
      phase_label: Ti

  - name: modify_volume_element
    method: add_buffer_zones
    software: damask
    base:
      buffer_sizes: [4,4, 4,4, 2,2]    # size of buffer on each face [-x, +x, -y, +y, -z, +z]
      phase_ids: [1,1, 1,1, 2,2]       # phase of each buffer. Relative, so 1 is the first new phase and so on
      phase_labels: ['Ti_iso', 'Air']  # labels of the new phases
      homog_label: SX
      order: ['z', 'y', 'x']           # order to add the zones, default [x, y, z]

  - name: visualise_volume_element
    method: VTK
    software: damask

  - name: generate_load_case
    method: uniaxial
    software: formable
    base:
      total_times: [100]
      num_increments: [100]
      target_strain_rates: [1.0e-4]
      directions: [x]
#      rotations:
#        - axis: [0, 0, 1]
#          angle_deg: +45
      dump_frequency: [10]
      

          
  - name: simulate_volume_element_loading
    method: CP_FFT
    software: DAMASK
    run_options:
      num_cores: 10
      l: mem256
      processing:
        num_cores: 4
        l: mem256
    output_map_options:
      operations:
        - name: add_stress_Cauchy
          args: {P: P, F: F}
          opts: {add_Mises: true}
        - name: add_strain
          args: {F: F, t: U, m: 2}
          opts: {add_Mises: true}
#        - name: add_strain
#          args: {F: F_p, t: U, m: 2}
#          opts: {add_Mises: true}
      # Use for average quantities in a single phase, say average stress/strain at each step of sim
      phase_data:
        - field_name: sigma
          phase_name: Ti
          out_name: vol_avg_stress
          transforms: [mean_along_axes: 1]
        - field_name: epsilon_U^2(F)
          phase_name: Ti
          out_name: vol_avg_strain
          transforms: [mean_along_axes: 1]
#        - field_name: epsilon_V^0(F_p)
#          phase_name: Ti
#          out_name: vol_avg_plastic_strain
#          transforms: [mean_along_axes: 1]
      # Use to extract spatial data from (probably a subset of increments)
      

      field_data:
        - field_name: epsilon_U^2(F)
          increments: 
            - values: [100]
        - field_name: sigma
          increments:
            - values: [100]
#        - field_name: O
#          increments:
#            - values: [100]
#        - field_name: u_n
#          increments:
#            - values: [100]
#        - field_name: epsilon_U^2(F_p)
#          increments: 
#            - values: [100]
#        - field_name: gamma_sl
#          increments: 
#            - values: [100]
#        - field_name: phase
#        - field_name: O
      # Use to extract grain averaged data
      grain_data:
        - field_name: epsilon_U^2(F)
          increments:
            - values: [100]
        - field_name: sigma
          increments:
            - values: [100]
#        - field_name: O
#          increments:
#            - values: [100]
            
            
#      visualise:
#        fields: 
#          - F
#          - F_p
#          - epsilon_U^2(F)
#          - epsilon_U^2(F_p)
#          - epsilon_U^2(F)_vM
#          - epsilon_U^2(F_p)_vM
#          - phase
#          - sigma
#          - sigma_vM
#          - IPFcolor_(1 0 0)
#          - IPFcolor_(0 1 0)
#          - IPFcolor_(0 0 1)
#          - O
#          
#        increments: 
#          values: [0,-1]
            
            
            
    base:
      homogenization_schemes:
        SX:
          mechanical:
            type: pass
          N_constituents: 1
      phases:
        Ti:
          lattice: hP
          c/a: 1.587
          mechanical:
            output: [F, F_p, P, O]
            elastic:
              type: Hooke
              C_11: 160.0e9
              C_12: 90.0e9
              C_13: 66.0e9
              C_33: 181.7e9
              C_44: 46.5e9
            plastic:
              type: phenopowerlaw
              output: [xi_sl, gamma_sl]
              N_sl: [3, 3, 0, 0, 12, 0]
              N_tw: [0, 0, 0, 0]
              n_sl: 20
              a_sl: 2
              dot_gamma_0_sl: 0.001
              xi_0_sl: [390e6, 468e6, 0, 0, 663e6, 0]     #663,1170,3900
              xi_inf_sl: [400e6, 478e6, 0, 0, 663e6, 0]
              h_0_sl_sl: 190e6
              h_sl_sl: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
        Ti_iso:
          lattice: aP
          mechanical:
            output: [F, P]
            elastic:
              type: Hooke
              C_11: 175.5e9
              C_12: 90.4e9
            plastic:
              type: none
        Air:
          lattice: aP
          mechanical:
            output: [F, P]
            elastic:
              type: Hooke
              C_11: 1e8
              C_12: 1e6
            plastic:
              type: isotropic
              output: [xi, gamma]
              xi_0: 0.3e6
              xi_inf: 0.6e6
              dot_gamma_0: 0.001
              n: 5
              M: 3
              h_0: 1e6
              a: 2
              dilatation: true
      numerics:
        grid:
          itmin: 2
          itmax: 100
          derivative: FWBW_difference